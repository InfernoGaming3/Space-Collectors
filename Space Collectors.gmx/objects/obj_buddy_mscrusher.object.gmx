<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_buddy_mscrusher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.30;
hsp = 0;
vsp = 0;
movespeed = 1;
max_hsp = 3;
grounded = 0;
normal_grav = 1;
jumps = 1;
jumpsmax = 2;
jumpbuffer = 0;
powerup = 0;
canshoot = 0;
crouch = 0;
slideframes = 26;
sliding = 0;
slidoffground = 0
airdrop = false;
airdropland = 0;
gravdirection = 0;
key_down = 0;
act = 0;
alarm12 = 0;
alarm13 = 0;
alarm14 = 0;
alarm15 = 0;
canattack = 0;
victorydance = 0;
camface = 0;
image_speed = 0.2;

//Global Variables 
global.shines = 0;
global.dead = 0;
global.flash = 0;
global.invincibility = 0;
global.playerattack = 0;

//Movespeed Alteration Variables
movespeed_normal = 1;
movespeed_buffed = 1.5;
movespeed_burst = 1.5;
movespeed_buffedburst = 2;

//Jumpspeed Alteration Variables
movespeed_powerup = 2.5;
movespeed_burstpowerup = 3;
jumpspeed_normal = 12;
jumpspeed_powerup = 18;

//Default Movespeed and Jumpspeed
movespeed = movespeed_normal;
jumpspeed = jumpspeed_normal;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.flash &gt; 0) {

    global.flash -= 1

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>rm_gameover</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slidoffground = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumpbuffer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (powerup != 2) {
crouch = 0;
sliding = 0;
max_hsp = 3;
movespeed = movespeed_normal;
}

if (powerup = 2) {
crouch = 0;
sliding = 0;
max_hsp = 3;
movespeed = movespeed_powerup;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if powerup = 5 {
image_blend = -1;
grav = 0.15;
powerup = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if powerup = 4 {
image_blend = -1;
grav = 0.15;
global.invincibility = 0;
powerup = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canshoot = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if powerup = 3 {
image_blend = -1;
powerup = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if powerup = 2 {
movespeed = movespeed_normal;
image_blend = -1;
powerup = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if powerup = 1 {
jumpspeed = jumpspeed_normal;
image_blend = -1;
powerup = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause)
{
alarm[0] +=1
alarm[1] +=1
alarm[2] +=1
alarm[3] +=1
alarm[4] +=1
alarm[5] +=1
alarm[6] +=1
alarm[10] +=1
alarm[11] +=1
exit;
}

//Attributes


//Get the player's input
if (crouch = 0) {
if (victorydance = 0) {
if (act = 0) {

    key_right = keyboard_check(vk_right);
    key_left = keyboard_check(vk_left);
    key_down = -keyboard_check(vk_down);
    key_jump = keyboard_check_pressed(vk_space)
    key_jump_held = keyboard_check(vk_space)
    key_jump_released = keyboard_check_released(vk_space);
}
}
}

//Short Hop Height
if (key_jump_released &amp;&amp; vsp &lt; 0) vsp /= 1.5;
move = key_left + key_right;

//Horizontal Movement

if (act = 0) {
if (crouch = 0) {
if (key_left) { image_xscale = -1
    if (hsp &gt; -3.5 * movespeed ) { hsp -= 0.20 * movespeed; }
}

if (key_right) { image_xscale = 1
    if (hsp &lt; 3.5 * movespeed) { hsp += 0.20 * movespeed; }
}
}
}


//Horizontal Stop

if (!key_left &amp;&amp; !key_right) or (key_left &amp;&amp; key_right) {
    hsp += ( 0 - hsp ) * 0.1;

}

//Gravity
vsp += grav

//Jumping
if (powerup != 5) {
if (place_meeting(x,y+1,obj_wall))
{
    jumps = jumpsmax;
}
}

if (powerup = 5) { //This is for the purple powerup, as the gravity flips and jumping sends you down
if (place_meeting(x,y-1,obj_wall))
{
    jumps = jumpsmax;
}
}

if (powerup != 5) {
if (key_jump) &amp;&amp; (jumps &gt; 0) &amp;&amp; (jumpbuffer = 0) &amp;&amp; (airdrop = false)
{  
    jumpbuffer = 1;
    alarm[7] = 8;
    jumps -= 1;
    vsp = -jumpspeed;
     audio_play_sound(snd_jump, 2, false);
}
}

if (powerup = 5) { //This is for the purple powerup, as the gravity flips and jumping sends you down
if (key_jump) &amp;&amp; (jumps &gt; 0) &amp;&amp; (jumpbuffer = 0) &amp;&amp; (airdrop = false)
{  
    jumpbuffer = 1;
    alarm[7] = 8;
    jumps -= 1;
    vsp = -jumpspeed;
     audio_play_sound(snd_jump, 2, false);
}
}

if (grounded = 0) &amp;&amp; (jumps &gt;= 2) {

    jumps = 1;
}


//Horizontal Collision
if (place_meeting(x+hsp,y,obj_wall))
{
    while(!place_meeting(x+sign(hsp),y,obj_wall)) x += sign(hsp);  
    hsp = 0;
}

//Finalize Horizontal
x += hsp;


//Vertical Collision
if (powerup != 5) { 
if (place_meeting(x,y+vsp,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall)) y += sign(vsp);
        if (sign(vsp) == 1) {grounded = 1}
        vsp = 0;
}
else {grounded = 0}
}

if (powerup = 5) { //This is for the purple powerup, as the gravity flips
if (place_meeting(x,y-vsp,obj_wall))
{
    while(!place_meeting(x,y-sign(vsp),obj_wall)) y -= sign(vsp);
        if (sign(vsp) == 1) {grounded = 1}
        vsp = 0;
}
else {grounded = 0}
}

//Finalize Vertical
if (powerup != 5) {
y += vsp;
}
if (powerup = 5) { //This is for the purple powerup, as the gravity flips
y -= vsp;
}


//Animate

if (airdrop = false) {
if (victorydance = 0) {
if (act = 0) {
if (place_meeting(x,y+1,obj_wall))
{

    if (move !=0) sprite_index = spr_buddy_mscrusherwalk; else sprite_index = spr_buddy_mscrusher;
}
else
{ 

    if (vsp &lt; 0) sprite_index = spr_buddy_mrscrusherjump
}

}
}
}

//Victory Dance

if (victorydance = 1) {

sprite_index = spr_player_dance;
hsp = 0;
movespeed = 0;
global.invincibility = 1;

}


//Game Over

if (global.dead = 1) {
    crouch = 0;
    sliding = 0;
    sprite_index = spr_player_death;
    instance_change(obj_dyingplayer, true);
    
}

//Flashing Invincibility

if (global.flash &gt; 0) {
    image_alpha = 0.5;
}
else {
   image_alpha = 1;
}

if (global.flash &gt; 0) { 

    alarm[11] = 1

}


//Ground Pound

if (grounded = 0 &amp;&amp; keyboard_check(vk_down) &amp;&amp; jumpbuffer = 0 &amp;&amp; global.playerattack = 0 &amp;&amp; slidoffground = 0 &amp;&amp; victorydance = 0 ) {   

    airdrop = true
    jumps = 0;
    sprite_index = spr_buddy_mscrushergroundpound
    vsp = +jumpspeed * 1.30;

}


//Landing from an AirDrop


if (airdrop = true) &amp;&amp; (place_meeting(x,y+1,obj_wall)) {

    airdrop = false
    instance_create(obj_buddy_mscrusher.x,obj_buddy_mscrusher.y-10,obj_landsmoke);
    act = 1
    hsp = 0;
    sprite_index = spr_buddy_mscrushergroundpound;
    alarm14 = 26;

}




if (place_meeting(x,y+1,obj_wall)) {
slidoffground = 0;
}

//Additional Alarms


if (alarm12 &amp;&amp; !--alarm12) {
    canattack = 0;
}

if (alarm13 &amp;&amp; !--alarm13) {
    victorydance = 0;
    movespeed = 1;
    global.invincibility = 0;
}

if (alarm14 &amp;&amp; !--alarm14) {
    act = 0;
    sprite_index = spr_buddy_mscrusher;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_neutral_robot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x+hsp,y,obj_wall))
{
 vsp = -jumpspeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
